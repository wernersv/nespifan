#!/usr/bin/env python

'''
Control the Brightness of LED using PWM on Raspberry Pi
http://www.electronicwings.com
'''

import RPi.GPIO as GPIO
import os,sys
from time import sleep

pin = 16 # The pin ID, edit here to change it
maxTMP = 65 # The maximum temperature in Celsius after which we trigger the fan

def getCPUtemperature():
    res = os.popen("/opt/vc/bin/vcgencmd measure_temp").readline()
    temp =(res.replace("temp=","").replace("'C\n",""))
#    print("temp is {0}".format(temp)) #Uncomment here for testing
    return temp 

def fanON(fullspeed):
#    print("on")
    GPIO.output(pin, GPIO.HIGH)
    return()

def fanOFF():
#    print("off")
    GPIO.output(pin, GPIO.LOW) 
    return()

def getTEMP():
    CPU_temp = float(getCPUtemperature())
    if CPU_temp>maxTMP:
        fanON(True)
    else:
        if CPU_temp < maxTMP -3:
           fanOFF()
    return()

def setPin(mode): # A little redundant function but useful if you want to add logging
    GPIO.output(pin, mode)
    return()

try:
#    setup() 
    GPIO.setwarnings(False)
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(pin, GPIO.OUT)
    while True:
        getTEMP()
        sleep(2) # Read the temperature every 5 sec, increase or decrease this limit if you want 
except KeyboardInterrupt: # trap a CTRL+C keyboard interrupt 
    GPIO.cleanup() # resets all GPIO ports used by this program


